body, html {
    margin: 0;
    padding: 0;
    height: 100%;
    font-family: Helvetica Neue,Helvetica,PingFang SC,Hiragino Sans GB,Microsoft YaHei,SimSun,sans-serif;
    font-weight: 400;
    font-size:0.75rem;
    -webkit-font-smoothing: antialiased;
    -webkit-tap-highlight-color: transparent;
}

.main-header-title-small{
    text-align:left;
    font-weight: 500;
    font-size:1.25rem;
    /* padding-left:5px; */
    color:#90aed8;
}
.main-header-title-mini{
    text-align:left;
    font-weight: 500;
    font-size:1rem;
    /* padding-left:5px; */
    color:#90aed8;
}
 
.iconfont-medium{
    font-size:2.25rem;
}
.iconfont-nomal{
    font-size:2rem;
}
.iconfont-small{
    font-size:1.75rem;
}
.iconfont-mini{
    font-size:1.5rem;
}
.iconfont-color-nomal{
    color:#6f7886;
}
 
.bread-crumb-cls-nomal{
    font-size:1.25rem;
} 
.bread-crumb-cls-small{
    font-size:1rem;
} 

/*
transform 水平垂直居中 不需要固定宽度的
推荐
<div class="parent">
  <div class="children">
    <div class="children-inline">我是水平垂直居中噢！</div>
  </div>
</div>
*/
.parent-transform{
    /* float: left; */
    width: auto;
    height: 100%; 
   }


.children-transform {
    float:left;
    position:relative;
    top:50%;
    left:50%;
   }
.children-inline-transform {
    position: relative;
    -webkit-transform : translate3d(0, -50%, 0);
    transform : translate3d(0, -50%, 0);  
}
 
/*
transform 垂直居中 不需要固定宽度的
parent-transform
 */
 
.children-transform-vertical {
    float:left;
    position:relative;
    top:50%;
   }
.children-inline-transform-vertical {
    position: relative;
    -webkit-transform : translate3d(0, -50%, 0);
    transform : translate3d(0, -50%, 0);  
}

/*
transform 水平居中 不需要固定宽度的
parent-transform
 */
 
 .children-transform-margin {
    float:left;
    position:relative;
    left:50%;
   }
.children-inline-transform-margin {
    position: relative;
    -webkit-transform : translate3d(0, -50%, 0);
    transform : translate3d(0, -50%, 0);  
}


/* 内容块都设置为display: table-cell;然后vertical-align: middle; 
或者display:inline-block
*/

.outer-cls{
     display: table;
 }
.inner-cls{
    display: table-cell;
    vertical-align: middle;
}
 

/*伪元素*/
.outer-vertical:before{
    display: inline-block;
    vertical-align: middle;
}
.inner-vertical{
    display: inline-block;
    vertical-align: middle;
}

 



/*整个文档中的滚动条样式*/
::-webkit-scrollbar {
    width: 8px;
  }
  ::-webkit-scrollbar-track {
    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
    border-radius: 10px;
  }
  ::-webkit-scrollbar-thumb {
    border-radius: 10px;
    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.5);
    min-height:60px;
    max-height:60px;
  }

  .el-card__body {
    padding: 4px;
  }


/**flex 居中模式*/
/*flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。*/
  .box{
    display: -webkit-flex; /* Safari */
    display: flex;
    /*
        row（默认值）：主轴为水平方向，起点在左端。
        row-reverse：主轴为水平方向，起点在右端。
        column：主轴为垂直方向，起点在上沿。
        column-reverse：主轴为垂直方向，起点在下沿。
    */
    flex-direction: row; 
    /**
        nowrap（默认）：不换行。
        wrap：换行，第一行在上方。
        wrap-reverse：换行，第一行在下方。
    */
    flex-wrap: nowrap;
    /*
        justify-content属性定义了项目在主轴上的对齐方式。
        假设主轴为从左到右。
        flex-start（默认值）：左对齐
        flex-end：右对齐
        center： 居中
        space-between：两端对齐，项目之间的间隔都相等。
        space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。
    */
    justify-content:flex-start ;/*flex-start  center  flex-end 主轴排列方式*/
    /*
        align-items属性定义项目在交叉轴上如何对齐。
        假设交叉轴从上到下。
        flex-start：交叉轴的起点对齐。
        flex-end：交叉轴的终点对齐。
        center：交叉轴的中点对齐。
        baseline: 项目的第一行文字的基线对齐。
        stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。
    */
    align-items:center  /**/
}
/**flex 居中模式*/
/*flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。*/
.box-end{
    display: -webkit-flex; /* Safari */
    display: flex;
    /*
        row（默认值）：主轴为水平方向，起点在左端。
        row-reverse：主轴为水平方向，起点在右端。
        column：主轴为垂直方向，起点在上沿。
        column-reverse：主轴为垂直方向，起点在下沿。
    */
    flex-direction: row; 
    /**
        nowrap（默认）：不换行。
        wrap：换行，第一行在上方。
        wrap-reverse：换行，第一行在下方。
    */
    flex-wrap: nowrap;
    /*
        justify-content属性定义了项目在主轴上的对齐方式。
        假设主轴为从左到右。
        flex-start（默认值）：左对齐
        flex-end：右对齐
        center： 居中
        space-between：两端对齐，项目之间的间隔都相等。
        space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。
    */
    justify-content:flex-end ;/*flex-start  center  flex-end 主轴排列方式*/
    /*
        align-items属性定义项目在交叉轴上如何对齐。
        假设交叉轴从上到下。
        flex-start：交叉轴的起点对齐。
        flex-end：交叉轴的终点对齐。
        center：交叉轴的中点对齐。
        baseline: 项目的第一行文字的基线对齐。
        stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。
    */
    align-items:center  /**/
}
/*子元素可以不要*/
.item{
    order:0;/*order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。*/
    flex-grow:0;/*flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。*/
    flex-shrink:1;/*flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。
    负值对该属性无效。*/
    flex-basis:auto;/*flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。*/
    align-self:auto;/*align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。*/
}